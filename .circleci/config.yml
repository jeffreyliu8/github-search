version: 2.1

orbs:
  android: circleci/android@1.0.3
  gcp-cli: circleci/gcp-cli@2.2.0

jobs:
  unit-test:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - android/run-tests:
          test-command: ./gradlew testDebug
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  lint-test:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - android/run-tests:
          test-command: ./gradlew lint test
          #./gradlew :app:assembleDebug
         # ./gradlew :app:assembleDebugAndroidTest
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/linttest/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/linttest/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/linttest

  android-test:
    parameters:
      system-image:
        type: string
        default: system-images;android-30;google_apis;x86
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew connectedDebugAndroidTest
          system-image: << parameters.system-image >>
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/outputs/androidTest-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

#  benchmarks-emulator:
#    executor:
#      name: android/android-machine
#      resource-class: xlarge
#
#    steps:
#      - checkout
#      - android/start-emulator-and-run-tests:
#          test-command: adb shell am instrument -w -m -e androidx.benchmark.suppressErrors EMULATOR -e debug false -e androidx.benchmark.output.enable true com.circleci.samples.todoapp.macrobenchmark/androidx.test.runner.AndroidJUnitRunner
#          system-image: system-images;android-30;google_apis;x86
#          post-emulator-launch-assemble-command: ./gradlew app:assembleRelease macrobenchmark:assemble
#          post-emulator-wait-steps:
#            - run: ./gradlew app:installRelease macrobenchmark:installRelease
#          kill-emulators: false
#      - run:
#          name: Pull benchmark data from emulator
#          command: |
#            mkdir ~/benchmarks
#            adb pull /storage/emulated/0/Android/media/com.circleci.samples.todoapp.macrobenchmark ~/benchmarks
#      - store_artifacts:
#          path: ~/benchmarks
#
#  benchmarks-ftl:
#    executor:
#      name: android/android
#      sdk-version: "30"
#      variant: node
#    steps:
#      - checkout
#      - android/restore-gradle-cache
#      - android/restore-build-cache
#      - run:
#          name: Build app and test app
#          command: ./gradlew app:assembleRelease macrobenchmark:assemble
#      - gcp-cli/initialize:
#          gcloud-service-key: GCP_SA_KEY
#          google-project-id: GCP_PROJECT_ID
#      - run:
#          name: run on FTL
#          command: |
#            gcloud firebase test android run \
#              --type instrumentation \
#              --app app/build/outputs/apk/release/app-release.apk \
#              --test macrobenchmark/build/outputs/apk/release/macrobenchmark-release.apk \
#              --device model=redfin,version=30,locale=en,orientation=portrait \
#              --directories-to-pull /sdcard/Download \
#              --results-bucket gs://android-sample-benchmarks \
#              --results-dir macrobenchmark \
#              --environment-variables clearPackageData=true,additionalTestOutputDir=/sdcard/Download,no-isolated-storage=true
#      - run:
#          name: Download benchmark data
#          command: |
#            mkdir ~/benchmarks
#            gsutil cp -r 'gs://android-sample-benchmarks/macrobenchmark/**/artifacts/sdcard/Download/*'  ~/benchmarks
#            gsutil rm -r gs://android-sample-benchmarks/macrobenchmark
#      - store_artifacts:
#          path: ~/benchmarks
#      - run:
#          name: Evaluate benchmark results
#          command: node scripts/eval_startup_benchmark_output.js

  release-build:
    executor:
      name: android/android-machine
      resource-class: xlarge
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: Assemble release build
          command: |
            ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release-unsigned.apk

workflows:
  test-and-build:
    jobs:
      - unit-test
      - android/run-ui-tests:
          filters:
            branches:
              ignore: main # regular commits
      - android-test:
          matrix:
            alias: android-test-all
            parameters:
              system-image:
                - system-images;android-30;google_apis;x86
                - system-images;android-29;google_apis;x86
                - system-images;android-28;google_apis;x86
                - system-images;android-27;google_apis;x86
                - system-images;android-26;google_apis;x86
                - system-images;android-25;google_apis;x86
                - system-images;android-24;google_apis;x86
                - system-images;android-23;google_apis;x86
          name: android-test-<<matrix.system-image>>
          filters:
            branches:
              only: master # Commits to main branch
#      - benchmarks-emulator
#      - benchmarks-ftl
      - lint-test
      - release-build:
          requires:
            - unit-test
            - android-test-all
            - lint-test
#            - benchmarks-emulator
#            - benchmarks-ftl
          filters:
            branches:
              only: master # Commits to main branch

#version: 2
#jobs:
#  build:
#    working_directory: ~/code
#    docker:
#      - image: circleci/android:api-29
#    environment:
#      JVM_OPTS: -Xmx3200m
#    steps:
#      - checkout
#      - restore_cache:
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
##      - run:
##          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
##          command: sudo chmod +x ./gradlew
#      - run:
#          name: Download Dependencies
#          command: ./gradlew androidDependencies
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Run Tests
#          command: ./gradlew lint test
#      - run:
#          name: Build debug APK and release APK
#          command: |
#            ./gradlew :app:assembleDebug
#            ./gradlew :app:assembleDebugAndroidTest
#      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
#          path: app/build/reports
#          destination: reports
#      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
#          path: app/build/test-results
#      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples